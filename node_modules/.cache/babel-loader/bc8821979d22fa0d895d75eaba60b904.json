{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maris\\\\Desktop\\\\Enda_projektid_oppimiseks\\\\inspire-music-app\\\\src\\\\components\\\\Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react'; // Import component\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // Import specific item\n\nimport { faPlay, faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = ({\n  currentSong,\n  isPlaying,\n  setIsPlaying\n}) => {\n  _s();\n\n  // Add access to Player\n  // Ref - To select specific HTML tag in component, use Ref\n  const audioRef = useRef(null); // Null is a starting value\n  // Event handlers\n  // If playing, then pause it. If pause, then play it.\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying); // Setting the state to opposite what it was.\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying); // Setting the state to opposite what it was.\n    }\n  };\n\n  const timeUpdatehandler = e => {\n    // Add time update handler\n    const current = e.target.currentTime;\n    console.log(e);\n  }; // State\n\n\n  const [songInfo, setSongInfo] = useState({\n    // Add state for songinfo\n    currentTime: null,\n    // Starting from 0 as default value\n    duration: null // Default value\n\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"End Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: timeupdateHandler,\n      ref: audioRef // Add access to timeupdateHandler // Pass audioRef property\n      ,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Player, \"ikSZEL43SlTBpz8LN6seE2n/uRw=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/maris/Desktop/Enda_projektid_oppimiseks/inspire-music-app/src/components/Player.js"],"names":["React","useRef","useState","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","Player","currentSong","isPlaying","setIsPlaying","audioRef","playSongHandler","current","pause","play","timeUpdatehandler","e","target","currentTime","console","log","songInfo","setSongInfo","duration","timeupdateHandler","audio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC,C,CACA;;AACA,SAASC,eAAT,QAAgC,gCAAhC,C,CACA;;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,YAA9B,QAAkD,mCAAlD;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA;AAA1B,CAAD,KAA8C;AAAA;;AAAE;AAC3D;AACA,QAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAAvB,CAFyD,CAE1B;AAC/B;AACA;;AACA,QAAMW,eAAe,GAAG,MAAM;AAC3B,QAAIH,SAAJ,EAAe;AACXE,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACAJ,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ,CAFW,CAEe;AAC7B,KAHD,MAGM;AACFE,MAAAA,QAAQ,CAACE,OAAT,CAAiBE,IAAjB;AACAL,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ,CAFE,CAEwB;AAC7B;AACH,GARD;;AASA,QAAMO,iBAAiB,GAAIC,CAAD,IAAO;AAAE;AAC/B,UAAMJ,OAAO,GAAGI,CAAC,CAACC,MAAF,CAASC,WAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACH,GAHD,CAdyD,CAmBzD;;;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC;AAAE;AACvCiB,IAAAA,WAAW,EAAE,IADwB;AAClB;AACnBK,IAAAA,QAAQ,EAAE,IAF2B,CAErB;;AAFqB,GAAD,CAAxC;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,WAA3B;AAAuC,QAAA,IAAI,EAAC,IAA5C;AAAiD,QAAA,IAAI,EAAEnB;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,oBAEI,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAEO,eAA1B;AAA2C,QAAA,SAAS,EAAC,MAArD;AAA4D,QAAA,IAAI,EAAC,IAAjE;AAAsE,QAAA,IAAI,EAAER;AAA5E;AAAA;AAAA;AAAA;AAAA,cAFJ,yBAGI,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,cAA3B;AAA0C,QAAA,IAAI,EAAC,IAA/C;AAAoD,QAAA,IAAI,EAAEE;AAA1D;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI;AAAO,MAAA,YAAY,EAAEmB,iBAArB;AAAwC,MAAA,GAAG,EAAEd,QAA7C,CAAuD;AAAvD;AACA,MAAA,GAAG,EAAEH,WAAW,CAACkB;AADjB;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAxCD;;GAAMnB,M;;KAAAA,M;AA0CN,eAAeA,MAAf","sourcesContent":["import React, { useRef, useState } from 'react';\r\n// Import component\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// Import specific item\r\nimport { faPlay, faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({ currentSong, isPlaying, setIsPlaying }) => { // Add access to Player\r\n    // Ref - To select specific HTML tag in component, use Ref\r\n    const audioRef = useRef(null); // Null is a starting value\r\n    // Event handlers\r\n    // If playing, then pause it. If pause, then play it.\r\n    const playSongHandler = () => {\r\n       if (isPlaying) {\r\n           audioRef.current.pause();\r\n           setIsPlaying(!isPlaying); // Setting the state to opposite what it was.\r\n       }else {\r\n           audioRef.current.play();\r\n           setIsPlaying(!isPlaying); // Setting the state to opposite what it was.\r\n       }\r\n    };\r\n    const timeUpdatehandler = (e) => { // Add time update handler\r\n        const current = e.target.currentTime\r\n        console.log(e);\r\n    }\r\n\r\n    // State\r\n    const [songInfo, setSongInfo] = useState({ // Add state for songinfo\r\n        currentTime: null, // Starting from 0 as default value\r\n        duration: null, // Default value\r\n    })\r\n    return(\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>Start Time</p>\r\n                <input type=\"range\" />\r\n                 <p>End Time</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft} /> {/* Display faAngleLeft icon*/}\r\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={faPlay} /> {/* Display faPlay icon*/} {/* Add playSongHandler */}\r\n                <FontAwesomeIcon className=\"skip-forward\" size=\"2x\" icon={faAngleRight} /> {/* Display faAngleRight icon*/}\r\n            </div>\r\n            <audio onTimeUpdate={timeupdateHandler} ref={audioRef} // Add access to timeupdateHandler // Pass audioRef property\r\n            src={currentSong.audio}></audio> {/* Pass  along currentSong */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;\r\n\r\n"]},"metadata":{},"sourceType":"module"}